Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	
+++ b/main.py	
@@ -1,0 +1,19 @@
+from flask import Flask
+from flask_login import LoginManager
+from data import db_session
+
+
+app = Flask(__name__)
+app.config['SECRET_KEY'] = 'biblyozh_secret_key_unhackable'
+login_manager = LoginManager()
+login_manager.init_app(app)
+
+@app.route('/')
+@app.route('/index')
+def index():
+    return "Hello Bibblyozh!"
+
+
+if __name__ == '__main__':
+    db_session.global_init("db/database.db")
+    app.run(port=8080, host='127.0.0.1')
\ No newline at end of file
Index: data/db_session.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/data/db_session.py b/data/db_session.py
new file mode 100644
--- /dev/null	
+++ b/data/db_session.py	
@@ -0,0 +1,32 @@
+import sqlalchemy as sa
+import sqlalchemy.orm as orm
+from sqlalchemy.orm import Session
+
+SqlAlchemyBase = orm.declarative_base()
+
+__factory = None
+
+
+def global_init(db_file):
+    global __factory
+
+    if __factory:
+        return
+
+    if not db_file or not db_file.strip():
+        raise Exception("Необходимо указать файл базы данных.")
+
+    conn_str = f'sqlite:///{db_file.strip()}?check_same_thread=False'
+    print(f"Подключение к базе данных по адресу {conn_str}")
+
+    engine = sa.create_engine(conn_str, echo=False)
+    __factory = orm.sessionmaker(bind=engine)
+
+    from . import __all_models
+
+    SqlAlchemyBase.metadata.create_all(engine)
+
+
+def create_session() -> Session:
+    global __factory
+    return __factory()
Index: data/users.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/data/users.py b/data/users.py
new file mode 100644
--- /dev/null	
+++ b/data/users.py	
@@ -0,0 +1,14 @@
+import  sqlalchemy
+from .db_session import SqlAlchemyBase
+
+class User(SqlAlchemyBase):
+    __tablename__ = 'users'
+
+    id = sqlalchemy.Column(sqlalchemy.Integer,
+                           primary_key=True, autoincrement=True)
+    name = sqlalchemy.Column(sqlalchemy.String, nullable=True)
+    email = sqlalchemy.Column(sqlalchemy.String,
+                              index=True, unique=True, nullable=True)
+    hashed_password = sqlalchemy.Column(sqlalchemy.String, nullable=True)
+    books_in_library = sqlalchemy.Column(sqlalchemy.List, nullable=True)
+
diff --git a/db/database.db b/db/database.db
new file mode 100644
diff --git a/data/__all_models.py b/data/__all_models.py
new file mode 100644
